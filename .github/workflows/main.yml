# on: push
# name: Build and Release apk
# jobs:
#   build:
#     name: Build APK
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v3
#     - uses: actions/setup-java@v3
#       with:
#         java-version: '12.x'
#         cache: 'gradle'
#     - uses: subosito/flutter-action@v2
#       with:
#         flutter-version: '3.7.0'
#         cache: true
#     - run: flutter pub get
#     - run: flutter build apk --debug --split-per-abi
#     - name: Create a Debug APK
#       uses: ncipollo/release-action@v1
#       with:
#         artifacts: "build/app/outputs/apk/debug/*.apk"
#     - run: flutter build apk --release --split-per-abi
#     - name: Create a Release APK
#       uses: ncipollo/release-action@v1
#       with:
#         artifacts: "build/app/outputs/apk/release/*.apk" 

name: Android Release

on:
  push:
    tags: 
      - v*.* 

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: "12.x"
          cache: 'gradle'
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.7.0"
          channel: 'stable'
          cache: true
      - name: Get dependencies
        run: flutter pub get

      - run: flutter build apk --debug #building flutter apk
      - run: flutter build appbundle --debug #building flutter bundle
        with:
          artifacts: "build/app/outputs/apk/debug/*.apk"
        
# name: Flutter CICD # action name
# on:
# push:
# tags:
# - “v*”
# jobs:
# build:
# runs-on: ubuntu-latest
# env:
# KEY_JKS: ${{ secrets.KEY_JKS }}
# KEY_PATH: “key.jks”
# KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
# ALIAS_PASSWORD: ${{ secrets.ALIAS_PASSWORD }}
# steps:
# - uses: actions/checkout@v2
# - uses: actions/setup-java@v2
# with:
# distribution: ‘adopt’
# java-version: ‘12.x’
# - name: Create key file
# run: echo $KEY_JKS | base64 -di > key.jks
# - uses: subosito/flutter-action@v1
# with:
# flutter-version: ‘2.10.2’ # change accordingly
# - run: flutter pub get
# - run: flutter build apk — release — split-per-abi
# - run: flutter build appbundle
# - name: Create github artifact release # disable this to save storage
# uses: ncipollo/release-action@v1
# with:
# artifacts: “build/app/outputs/apk/release/*.apk,build/app/outputs/bundle/release/app-release.aab”
# token: ${{ secrets.GITHUB_TOKEN }} # this is automatically provided by github
# commit:
# - name: Upload app bundle artifact
# uses: actions/upload-artifact@v2
# with:
# name: appbundle
# path: build/app/outputs/bundle/release/app-release.aab